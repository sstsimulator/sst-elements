To run using DRAMSim you need to follow the steps in README with 2 exceptions:

1) configure SST to use DRAMSim

for example:

../configure --prefix=/home/mjleven/sstSVN/sandbox-20/build/install --with-boost=/opt/Software/boost/1.43.0 --with-gem5=/home/mjleven/sstLibs/m5/build/X86_SE CPPFLAGS=-I/usr/include/python2.4 --with-dramsim=/home/mjleven/sstLibs/DRAMSim2

2) create a link to the DRAMSim source tree from the directory in which you 
    execute mpirun (DRAMSim needs access to configuration files).


[mjleven@morbo xml]$ pwd
/home/mjleven/sstSVN/sandbox-20/sst/elements/M5/xml
[mjleven@morbo xml]$ ln -s /home/mjleven/sstLibs/DRAMSim2
[mjleven@morbo xml]$ mpirun -np 1 sst.x dram-example.xml
WARNING: Building component "system" with no links assigned.
0:M5:configFile `dram-exampleM5.xml`
0:M5:registering exit `m5.nid0.cpu0.workload`
0:M5:registering exit
0:Exit::refInc():45: component multiple increment
the name of the new process is:m5.nid0.cpu0.workload 
DRAMSim2/ini/DDR3_micron_32M_8B_x8_sg15
writing vis file to results//DDR3_micron_32M_8B_x8_sg15/1GB.1Ch.4R.scheme2.open_page.4TQ.4CQ.BtR.pRankpBank.vis
hello mike
`/home/mjleven/sstSVN/sandbox-20/sst/elements/M5/app/hello`
`RT_RANK=0`
`RT_SIZE=1`
`PTLNIC_CMD_QUEUE_ADDR=0x2000`
goodby mike
0:M5:exiting: time=38149000 cause=`target exitGroupFunc called exit()` code=0
[mjleven@morbo xml]$ 


Instead of creating the link to the DRAMSim configuration info you could edit
dram-exampleM5.xml and change:

<pwd> DRAMSim2 </pwd> 

to 

<pwd> /home/mjleven/sstLibs/DRAMSim2 </pwd>
