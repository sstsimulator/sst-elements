"AMD K10",,,,,,
"List of instruction timings and macro-operation breakdown",,,,,,
,,,,,,
"Explanation of column headings:",,,,,,
"Instruction:","Instruction name. cc means any condition code. For example, Jcc can be JB, JNE, etc.",,,,,
"Operands:","i = immediate constant, r = any register, r32 = 32-bit register, etc., mm = 64 bit mmx register, xmm = 128 bit xmm register, sr = segment register, m = any memory operand including indirect operands, m64 means 64-bit memory operand, etc.",,,,,
"Ops:","Number of macro-operations issued from instruction decoder to schedulers. Instructions with more than 2 macro-operations use microcode.",,,,,
"Latency:","This is the delay that the instruction generates in a dependency chain. The numbers are minimum values. Cache misses, misalignment, and exceptions may increase the clock counts considerably. Floating point operands are presumed to be normal numbers. Denormal numbers, NAN's, infinity and exceptions increase the delays. The latency listed does not include the memory operand where the operand is listed as register or memory (r/m).",,,,,
"Reciprocal throughput:","This is also called issue latency. This value indicates the average number of clock cycles from the execution of an instruction begins to a subsequent independent instruction of the same kind can begin to execute. A value of 1/3 indicates that the execution units can handle 3 instructions per clock cycle in one thread. However, the throughput may be limited by other bottlenecks in the pipeline. ",,,,,
"Execution unit:","Indicates which execution unit is used for the macro-operations. ALU means any of the three integer ALU's. ALU0_1 means that ALU0 and ALU1 are both used. AGU means any of the three integer address generation units. FADD means floating point adder unit. FMUL means floating point multiplier unit. FMISC means floating point store and miscellaneous unit. FA/M means FADD or FMUL is used. FANY means any of the three floating point units can be used. Two macro-operations can execute simultaneously if they go to different execution units.",,,,,
,,,,,,
"Integer instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution unit","Notes"
"Move instructions",,,,,,
"MOV","r,r",1,"1","1/3","ALU",
"MOV","r,i",1,"1","1/3","ALU",
"MOV","r8,m8",1,"4","1/2","ALU, AGU","Any addressing mode. Add 1 clock if code segment base ≠ 0"
"MOV","r16,m16",1,"4","1/2","ALU, AGU",
"MOV","r32,m32",1,"3","1/2","AGU",
"MOV","r64,m64",1,"3","1/2","AGU",
"MOV","m8,r8H",1,"8","1/2","AGU","AH, BH, CH, DH"
"MOV","m8,r8L",1,"3","1/2","AGU","Any other 8-bit register"
"MOV","m16/32/64,r",1,"3","1/2","AGU","Any addressing mode"
"MOV","m,i",1,"3","1/2","AGU",
"MOV","m64,i32",1,"3","1/2","AGU",
"MOV","r,sr",1,"3-4","1/2",,
"MOV","sr,r/m",6,"8-26",8,,"from AMD manual"
"MOVNTI","m,r",1,,"1","AGU",
"MOVZX, MOVSX","r,r",1,"1","1/3","ALU",
"MOVZX, MOVSX","r,m",1,"4","1/2","ALU, AGU",
"MOVSXD","r64,r32",1,"1","1/3","ALU",
"MOVSXD","r64,m32",1,"4","1/2","ALU, AGU",
"CMOVcc","r,r",1,"1","1/3","ALU",
"CMOVcc","r,m",1,"4","1/2","ALU, AGU",
"XCHG","r,r",2,"1",1,"ALU",
"XCHG","r,m",2,"21",19,"ALU, AGU","Timing depends on hw"
"XLAT",,2,"5",5,"ALU, AGU",
"PUSH","r",1,,"1/2","ALU, AGU",
"PUSH","i",1,,"1/2","ALU, AGU",
"PUSH","m",2,,1,"ALU, AGU",
"PUSH","sr",2,,1,"ALU, AGU",
"PUSHF(D/Q)",,9,,3,"ALU, AGU",
"PUSHA(D)",,9,"6",6,"ALU, AGU",
"POP","r",1,,"1/2","ALU, AGU",
"POP","m",3,"3",1,"ALU, AGU",
"POP","DS/ES/FS/GS","6","10",8,"ALU, AGU",
"POP","SS","10","26",16,"ALU, AGU",
"POPF(D/Q)",,28,"16",11,"ALU, AGU",
"POPA(D)",,9,"6",6,"ALU, AGU",
"LEA","r16,[m]",2,"3",1,"ALU, AGU","Any address size"
"LEA","r32/64,[m]",1,"1","1/3","ALU","≤ 2 source operands"
"LEA","r32/64,[m]",1,"2","1/3","AGU","W. scale or 3 opr."
"LAHF",,4,"3",2,"ALU",
"SAHF",,1,"1","1/3","ALU",
"SALC",,1,"1","1","ALU",
"LDS, LES, ...","r,m",10,,10,,
"BSWAP","r",1,"1","1/3","ALU",
"PREFETCHNTA","m",1,,"1/2","AGU",
"PREFETCHT0/1/2","m",1,,"1/2","AGU",
"SFENCE",,6,,8,,
"LFENCE",,1,,1,,
"MFENCE",,4,,33,,
"IN","r,i/DX","~270",,,,
"OUT","i/DX,r","~300",,,,
,,,,,,
"Arithmetic instructions",,,,,,
"ADD, SUB","r,r/i",1,"1","1/3","ALU",
"ADD, SUB","r,m",1,,"1/2","ALU, AGU",
"ADD, SUB","m,r",1,"4",1,"ALU, AGU",
"ADC, SBB","r,r/i",1,"1","1/3","ALU",
"ADC, SBB","r,m",1,,"1/2","ALU, AGU",
"ADC, SBB","m,r/i",1,"4",1,"ALU, AGU",
"CMP","r,r/i",1,"1","1/3","ALU",
"CMP","r,m",1,,"1/2","ALU, AGU",
"INC, DEC, NEG","r",1,"1","1/3","ALU",
"INC, DEC, NEG","m",1,"7",2,"ALU, AGU",
"AAA, AAS",,9,"5",5,"ALU",
"DAA",,12,"6",6,"ALU",
"DAS",,16,"7",7,"ALU",
"AAD",,4,"5",5,"ALU0",
"AAM",,30,"13",13,"ALU",
"MUL, IMUL","r8/m8",1,"3",1,"ALU0",
"MUL, IMUL","r16/m16",3,"3",2,"ALU0_1","latency ax=3, dx=4"
"MUL, IMUL","r32/m32",2,"3",1,"ALU0_1",
"MUL, IMUL","r64/m64",2,"4",2,"ALU0_1","latency rax=4, rdx=5"
"IMUL","r16,r16/m16",1,"3",1,"ALU0",
"IMUL","r32,r32/m32",1,"3",1,"ALU0",
"IMUL","r64,r64/m64",1,"4",2,"ALU0_1",
"IMUL","r16,(r16),i",2,"4",1,"ALU0",
"IMUL","r32,(r32),i",1,"3",1,"ALU0",
"IMUL","r64,(r64),i",1,"4",2,"ALU0",
"IMUL","r16,m16,i",3,,2,"ALU0",
"IMUL","r32,m32,i",3,,2,"ALU0",
"IMUL","r64,m64,i",3,,2,"ALU0_1",
"DIV","r8/m8",,"17",17,"ALU",
"IDIV","r8",,"19",19,"ALU",
"IDIV","m8",,"22",22,"ALU",
"DIV","r16/m16",,"15-30","15-30","ALU","Depends on number of significant bits in absolute value of dividend. See AMD software optimization guide."
"DIV","r32/m32",,"15-46","15-46","ALU",
"DIV","r64/m64",,"15-78","15-78","ALU",
"IDIV","r16/m16",,"24-39","24-39","ALU",
"IDIV","r32/m32",,"24-55","24-55","ALU",
"IDIV","r64/m64",,"24-87","24-87","ALU",
"CBW, CWDE, CDQE",,1,"1","1/3","ALU",
"CWD, CDQ, CQO",,1,"1","1/3","ALU",
,,,,,,
"Logic instructions",,,,,,
"AND, OR, XOR","r,r",1,"1","1/3","ALU",
"AND, OR, XOR","r,m",1,,"1/2","ALU, AGU",
"AND, OR, XOR","m,r",1,"4",1,"ALU, AGU",
"TEST","r,r",1,"1","1/3","ALU",
"TEST","r,m",1,,"1/2","ALU, AGU",
"NOT","r",1,"1","1/3","ALU",
"NOT","m",1,"7",1,"ALU, AGU",
"SHL, SHR, SAR","r,i/CL",1,"1","1/3","ALU",
"ROL, ROR","r,i/CL",1,"1","1/3","ALU",
"RCL, RCR","r,1",1,"1",1,"ALU",
"RCL","r,i",9,"3",3,"ALU",
"RCR","r,i",7,"3",3,"ALU",
"RCL","r,CL",9,"4",4,"ALU",
"RCR","r,CL",7,"3",3,"ALU",
"SHL,SHR,SAR,ROL,ROR","m,i /CL",1,"7",1,"ALU, AGU",
"RCL, RCR","m,1",1,"7",1,"ALU, AGU",
"RCL","m,i",10,"7",5,"ALU, AGU",
"RCR","m,i",9,"7",6,"ALU, AGU",
"RCL","m,CL",9,"8",6,"ALU, AGU",
"RCR","m,CL",8,"7",5,"ALU, AGU",
"SHLD, SHRD","r,r,i",6,"3",2,"ALU",
"SHLD, SHRD","r,r,cl",7,"3",3,"ALU",
"SHLD, SHRD","m,r,i/CL",8,"7.5",6,"ALU, AGU",
"BT","r,r/i",1,"1","1/3","ALU",
"BT","m,i",1,,"1/2","ALU, AGU",
"BT","m,r",5,"7",2,"ALU, AGU",
"BTC, BTR, BTS","r,r/i",2,"2","1/3","ALU",
"BTC","m,i",5,"9",1.5,"ALU, AGU",
"BTR, BTS","m,i",4,"9",1.5,"ALU, AGU",
"BTC","m,r",8,"8",10,"ALU, AGU",
"BTR, BTS","m,r",8,"8",7,"ALU, AGU",
"BSF","r,r",6,"4",3,"ALU",
"BSR","r,r",7,"4",3,"ALU",
"BSF","r,m",7,"7",3,"ALU, AGU",
"BSR","r,m",8,"7",3,"ALU, AGU",
"POPCNT","r,r/m",1,"2",1,"ALU","SSE4.A / SSE4.2"
"LZCNT","r,r/m",1,"2",1,"ALU","SSE4.A, AMD only"
"SETcc","r",1,"1","1/3","ALU",
"SETcc","m",1,,"1/2","ALU, AGU",
"CLC, STC",,1,,"1/3","ALU",
"CMC",,1,"1","1/3","ALU",
"CLD",,1,,"1/3","ALU",
"STD",,2,,"2/3","ALU",
,,,,,,
"Control transfer instructions",,,,,,
"JMP","short/near",1,,2,"ALU",
"JMP","far","16-20","23-32",,,"low values = real mode"
"JMP","r",1,,2,"ALU",
"JMP","m(near)",1,,2,"ALU, AGU",
"JMP","m(far)","17-21","25-33",,,"low values = real mode"
"Jcc","short/near",1,,"1/3 - 2","ALU","recip. thrp.= 2 if jump"
"J(E/R)CXZ","short",2,,"2/3 - 2","ALU","recip. thrp.= 2 if jump"
"LOOP","short",7,,3,"ALU",
"CALL","near",3,"2",2,"ALU",
"CALL","far","16-22","23-32",,,"low values = real mode"
"CALL","r",4,"3",3,"ALU",
"CALL","m(near)",5,"3",3,"ALU, AGU",
"CALL","m(far)","16-22","24-33",,,"low values = real mode"
"RETN",,2,"3",3,"ALU",
"RETN","i",2,"3",3,"ALU",
"RETF",,"15-23","24-35",,,"low values = real mode"
"RETF","i","15-24","24-35",,,"low values = real mode"
"IRET",,32,"81",,,"real mode"
"INT","i",33,"42",,,"real mode"
"BOUND","m",6,,2,,"values are for no jump"
"INTO",,2,,2,,"values are for no jump"
,,,,,,
"String instructions",,,,,,
"LODS",,4,"2",2,,
"REP LODS",,5,"2",2,,"values are per count"
"STOS",,4,"2",2,,
"REP STOS",,2,"1",1,,"values are per count"
"MOVS",,7,"3",3,,
"REP MOVS",,3,"1",1,,"values are per count"
"SCAS",,5,"2",2,,
"REP SCAS",,5,"2",2,,"values are per count"
"CMPS",,7,"3",3,,
"REP CMPS",,3,"1",1,,"values are per count"
,,,,,,
"Other",,,,,,
"NOP (90)",,1,"0","1/3","ALU",
"Long NOP (0F 1F)",,1,"0","1/3","ALU",
"ENTER",,"i,0","12",,12,
"LEAVE",,2,,3,,"3 ops, 5 clk if 16 bit"
"CLI",,"8-9",,5,,
"STI",,"16-17",,27,,
"CPUID",,"22-50","47-164",,,
"RDTSC",,30,,67,,
"RDPMC  ",,13,,5,,
,,,,,,
"Floating point x87 instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution unit","Notes"
"Move instructions",,,,,,
"FLD","r",1,"2","1/2","FA/M",
"FLD","m32/64",1,"4","1/2","FANY",
"FLD","m80",7,"13",4,,
"FBLD","m80",20,"94",30,,
"FST(P)","r",1,"2","1/2","FA/M",
"FST(P)","m32/64",1,"2",1,"FMISC",
"FSTP","m80",10,"8",7,,
"FBSTP","m80",218,"167",163,,
"FXCH","r",1,"0","1/3",,
"FILD","m",1,"6",1,"FMISC",
"FIST(P)","m",1,"4",1,"FMISC",
"FLDZ, FLD1",,1,,1,"FMISC",
"FCMOVcc","st0,r",9,,,"FMISC, FA/M","Low latency immediately after FCOMI"
"FFREE","r",1,,"1/3","FANY",
"FINCSTP, FDECSTP",,1,"0","1/3","FANY",
"FNSTSW","AX",2,,16,"FMISC, ALU","Low latency immediately after FCOM FTST"
"FSTSW","AX",3,,14,"FMISC, ALU","do."
"FNSTSW","m16",2,,9,"FMISC, ALU","do."
"FNSTCW","m16",3,,2,"FMISC, ALU",
"FLDCW","m16",12,,14,"FMISC, ALU","faster if unchanged"
,,,,,,
"Arithmetic instructions",,,,,,
"FADD(P),FSUB(R)(P)","r/m",1,"4",1,"FADD",
"FIADD,FISUB(R)","m",2,,4,"FADD,FMISC",
"FMUL(P)","r/m",1,"4",1,"FMUL",
"FIMUL","m",2,,4,"FMUL,FMISC",
"FDIV(R)(P)","r/m",1,"?",24,"FMUL",
"FIDIV(R)","m",2,"31",24,"FMUL,FMISC",
"FABS, FCHS",,1,"2",2,"FMUL",
"FCOM(P), FUCOM(P)","r/m",1,,1,"FADD",
"FCOMPP, FUCOMPP",,1,,1,"FADD",
"FCOMI(P)","r",1,,1,"FADD",
"FICOM(P)","m",2,,1,"FADD, FMISC",
"FTST",,1,,1,"FADD",
"FXAM",,2,,1,"FMISC, ALU",
"FRNDINT",,6,,37,,
"FPREM",,1,,7,"FMUL",
"FPREM1",,1,,7,"FMUL",
,,,,,,
"Math",,,,,,
"FSQRT",,1,"35",35,"FMUL",
"FLDPI, etc.",,1,,1,"FMISC",
"FSIN",,45,"~51?",,,
"FCOS",,51,"~90?",,,
"FSINCOS",,76,"~125?",,,
"FPTAN",,45,"~119",,,
"FPATAN",,9,"151?","45?",,
"FSCALE",,5,"9",29,,
"FXTRACT",,11,"9",41,,
"F2XM1",,8,"65","30?",,
"FYL2X",,8,"13","30?",,
"FYL2XP1",,12,"114","44?",,
,,,,,,
"Other",,,,,,
"FNOP",,1,"0","1/3","FANY",
"(F)WAIT",,1,"0","1/3","ALU",
"FNCLEX",,8,,28,"FMISC",
"FNINIT",,26,,103,"FMISC",
"FNSAVE","m",77,"162",149,,
"FRSTOR","m",70,"133",149,,
"FXSAVE","m",61,"63",58,,
"FXRSTOR","m",85,"89",79,,
,,,,,,
"Integer MMX and XMM instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution unit","Notes"
"Move instructions",,,,,,
"MOVD","r32, mm",1,"3",1,"FADD",
"MOVD","mm, r32",2,"6",3,,
"MOVD","mm,m32",1,"4","1/2","FANY",
"MOVD","r32, xmm",1,"3",1,"FADD",
"MOVD","xmm, r32",2,"6",3,,
"MOVD","xmm,m32",1,"2","1/2",,
"MOVD","m32,mm/x",1,"2",1,"FMISC",
"MOVD (MOVQ)","r64,(x)mm",1,"3",1,"FADD","Moves 64 bits. Name of instruction differs"
"MOVD (MOVQ)","mm,r64",2,"6",3,,"do."
"MOVD (MOVQ)","xmm,r64",2,"6",3,"FMUL, ALU","do."
"MOVQ","mm,mm",1,"2","1/2","FA/M",
"MOVQ","xmm,xmm",1,"2.5","1/3","FANY",
"MOVQ","mm,m64",1,"4","1/2","FANY",
"MOVQ","xmm,m64",1,"2","1/2","?",
"MOVQ","m64,(x)mm",1,"2",1,"FMISC",
"MOVDQA","xmm,xmm",1,"2.5","1/3","FANY",
"MOVDQA","xmm,m",1,"2","1/2","?",
"MOVDQA","m,xmm",2,"2",1,"FMUL,FMISC",
"MOVDQU","xmm,m",1,"2","1/2",,
"MOVDQU","m,xmm",3,"3",2,,
"MOVDQ2Q","mm,xmm",1,"2","1/3","FANY",
"MOVQ2DQ","xmm,mm",1,"2","1/3","FANY",
"MOVNTQ","m,mm",1,,1,"FMISC",
"MOVNTDQ","m,xmm",2,,1,"FMUL,FMISC",
"PACKSSWB/DW PACKUSWB","mm,r/m",1,"2","1/2","FA/M",
"PACKSSWB/DW PACKUSWB","xmm,r/m",1,"3","1/2","FA/M",
"PUNPCKH/LBW/WD/DQ","mm,r/m",1,"2","1/2","FA/M",
"PUNPCKH/LBW/WD/DQ","xmm,r/m",1,"3","1/2","FA/M",
"PUNPCKHQDQ","xmm,r/m",1,"3","1/2","FA/M",
"PUNPCKLQDQ","xmm,r/m",1,"3","1/2","FA/M",
"PSHUFD","xmm,xmm,i",1,"3","1/2","FA/M",
"PSHUFW","mm,mm,i",1,"2","1/2","FA/M",
"PSHUFL/HW","xmm,xmm,i",1,"2","1/2","FA/M",
"MASKMOVQ","mm,mm",32,,13,,
"MASKMOVDQU","xmm,xmm",64,,24,,
"PMOVMSKB","r32,mm/xmm",1,"3",1,"FADD",
"PEXTRW","r32,(x)mm,i",2,"6",1,,
"PINSRW","(x)mm,r32,i",2,"9",3,"FA/M",
"INSERTQ","xmm,xmm",3,"6",2,"FA/M","SSE4.A, AMD only"
"INSERTQ","xmm,xmm,i,i",3,"6",2,"FA/M","SSE4.A, AMD only"
"EXTRQ","xmm,xmm",1,"2","1/2","FA/M","SSE4.A, AMD only"
"EXTRQ","xmm,xmm,i,i",1,"2","1/2","FA/M","SSE4.A, AMD only"
,,,,,,
"Arithmetic instructions",,,,,,
"PADDB/W/D/Q PADDSB/W PADDUSB/W PSUBB/W/D/Q PSUBSB/W PSUBUSB/W","mm/xmm,r/m",1,"2","1/2","FA/M",
"PCMPEQ/GT B/W/D","mm/xmm,r/m",1,"2","1/2","FA/M",
"PMULLW PMULHW PMULHUW PMULUDQ","mm/xmm,r/m",1,"3",1,"FMUL",
"PMADDWD","mm/xmm,r/m",1,"3",1,"FMUL",
"PAVGB/W","mm/xmm,r/m",1,"2","1/2","FA/M",
"PMIN/MAX SW/UB","mm/xmm,r/m",1,"2","1/2","FA/M",
"PSADBW","mm/xmm,r/m",1,"3",1,"FADD",
,,,,,,
"Logic",,,,,,
"PAND PANDN POR PXOR","mm/xmm,r/m",1,"2","1/2","FA/M",
"PSLL/RL W/D/Q PSRAW/D","mm,i/mm/m",1,"2","1/2","FA/M",
"PSLL/RL W/D/Q PSRAW/D","x,i/(x)mm",1,"3","1/2","FA/M",
"PSLLDQ, PSRLDQ","xmm,i",1,"3","1/2","FA/M",
,,,,,,
"Other",,,,,,
"EMMS",,1,,"1/3","FANY",
,,,,,,
"Floating point XMM instructions",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution unit","Notes"
"Move instructions",,,,,,
"MOVAPS/D","r,r",1,"2.5","1/2","FANY",
"MOVAPS/D","r,m",1,"2","1/2","?",
"MOVAPS/D","m,r",2,"2",1,"FMUL,FMISC",
"MOVUPS/D","r,r",1,"2.5","1/2","FANY",
"MOVUPS/D","r,m",1,"2","1/2","?",
"MOVUPS/D","m,r",3,"3",2,"FMISC",
"MOVSS/D","r,r",1,"2","1/2","FA/M",
"MOVSS/D","r,m",1,"2","1/2","?",
"MOVSS/D","m,r",1,"2",1,"FMISC",
"MOVHLPS, MOVLHPS","r,r",1,"3","1/2","FA/M",
"MOVHPS/D, MOVLPS/D","r,m",1,"4","1/2","FA/M",
"MOVHPS/D, MOVLPS/D","m,r",1,,1,"FMISC",
"MOVNTPS/D","m,r",2,,3,"FMUL,FMISC",
"MOVNTSS/D","m,r",1,,1,"FMISC","SSE4.A, AMD only"
"MOVMSKPS/D","r32,r",1,"3",1,"FADD",
"SHUFPS/D","r,r/m,i",1,"3","1/2","FA/M",
"UNPCK H/L PS/D","r,r/m",1,"3","1/2","FA/M",
,,,,,,
"Conversion",,,,,,
"CVTPS2PD","r,r/m",1,"2",1,"FMISC",
"CVTPD2PS","r,r/m",2,"7",1,,
"CVTSD2SS","r,r/m",3,"8",2,,
"CVTSS2SD","r,r/m",3,"7",2,,
"CVTDQ2PS","r,r/m",1,"4",1,"FMISC",
"CVTDQ2PD","r,r/m",1,"4",1,"FMISC",
"CVT(T)PS2DQ","r,r/m",1,"4",1,"FMISC",
"CVT(T)PD2DQ","r,r/m",2,"7",1,,
"CVTPI2PS","xmm,mm",2,"7",1,,
"CVTPI2PD","xmm,mm",1,"4",1,"FMISC",
"CVT(T)PS2PI","mm,xmm",1,"4",1,"FMISC",
"CVT(T)PD2PI","mm,xmm",2,"7",1,,
"CVTSI2SS","xmm,r32",3,"14",3,,
"CVTSI2SD","xmm,r32",3,"14",3,,
"CVT(T)SD2SI","r32,xmm",2,"8",1,"FADD,FMISC",
"CVT(T)SS2SI","r32,xmm",2,"8",1,"FADD,FMISC",
,,,,,,
"Arithmetic",,,,,,
"ADDSS/D SUBSS/D","r,r/m",1,"4",1,"FADD",
"ADDPS/D SUBPS/D","r,r/m",1,"4",1,"FADD",
"MULSS/D","r,r/m",1,"4",1,"FMUL",
"MULPS/D","r,r/m",1,"4",1,"FMUL",
"DIVSS","r,r/m",1,"16",13,"FMUL",
"DIVPS","r,r/m",1,"18",15,"FMUL",
"DIVSD","r,r/m",1,"20",17,"FMUL",
"DIVPD","r,r/m",1,"20",17,"FMUL",
"RCPSS RCPPS","r,r/m",1,"3",1,"FMUL",
"MAXSS/D MINSS/D","r,r/m",1,"2",1,"FADD",
"MAXPS/D MINPS/D","r,r/m",1,"2",1,"FADD",
"CMPccSS/D","r,r/m",1,"2",1,"FADD",
"CMPccPS/D ","r,r/m",1,"2",1,"FADD",
"COMISS/D UCOMISS/D ","r,r/m",1,,1,"FADD",
,,,,,,
"Logic",,,,,,
"ANDPS/D ANDNPS/D ORPS/D XORPS/D","r,r/m",1,"2","1/2","FA/M",
,,,,,,
"Math",,,,,,
"SQRTSS","r,r/m",1,"19",16,"FMUL",
"SQRTPS","r,r/m",1,"21",18,"FMUL",
"SQRTSD","r,r/m",1,"27",24,"FMUL",
"SQRTPD","r,r/m",1,"27",24,"FMUL",
"RSQRTSS","r,r/m",1,"3",1,"FMUL",
"RSQRTPS","r,r/m",1,"3",1,"FMUL",
,,,,,,
"Other",,,,,,
"LDMXCSR","m",12,"12",10,,
"STMXCSR","m",3,"12",11,,
,,,,,,
"3DNow instructions (obsolete)",,,,,,
"Instruction","Operands","Ops","Latency","Reciprocal throughput","Execution unit","Notes"
"Move and convert instructions",,,,,,
"PREFETCH(W)","m",1,,"1/2","AGU",
"PF2ID","mm,mm",1,"5",1,"FMISC",
"PI2FD","mm,mm",1,"5",1,"FMISC",
"PF2IW","mm,mm",1,"5",1,"FMISC","3DNow extension"
"PI2FW","mm,mm",1,"5",1,"FMISC","3DNow extension"
"PSWAPD","mm,mm",1,"2","1/2","FA/M","3DNow extension"
,,,,,,
"Integer instructions",,,,,,
"PAVGUSB","mm,mm",1,"2","1/2","FA/M",
"PMULHRW","mm,mm",1,"3",1,"FMUL",
,,,,,,
"Floating point instructions",,,,,,
"PFADD/SUB/SUBR","mm,mm",1,"4",1,"FADD",
"PFCMPEQ/GE/GT","mm,mm",1,"2",1,"FADD",
"PFMAX/MIN","mm,mm",1,"2",1,"FADD",
"PFMUL","mm,mm",1,"4",1,"FMUL",
"PFACC","mm,mm",1,"4",1,"FADD",
"PFNACC, PFPNACC","mm,mm",1,"4",1,"FADD","3DNow extension"
"PFRCP","mm,mm",1,"3",1,"FMUL",
"PFRCPIT1/2","mm,mm",1,"4",1,"FMUL",
"PFRSQRT","mm,mm",1,"3",1,"FMUL",
"PFRSQIT1","mm,mm",1,"4",1,"FMUL",
,,,,,,
"Other",,,,,,
"FEMMS","mm,mm",1,,"1/3","FANY",
,,,,,,
"Thank you to Xucheng Tang for doing the measurements on the K10.",,,,,,
