/* 64- and 128- Bit Instructions */
/*  Instruction;Operands;Operation;Decode Unit;Execution Unit;Base Latency;+Memory Latency;Throughput;Category  */
/*  By default, if an instruction has no character to its left, this means that there is always a 2-cycle difference */
/*  between that instruction have only xmmister operands and that instruction having a memory operand.               */
/*  Any instruction that has a memory operand as its second operand is a LOAD.					     */
/*  Instructions with an * in front of them means that the operands must be inspected before you can tell which      */
/*  execution it will use and, therefore, its latency.  							     */

*MOVAPD  xmm,xmm         single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
*MOVAPS  xmm,xmm         single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
*MOVDDUP xmm,xmm         single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
MOVDQ2Q  mm,xmm          single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
*MOVDQA  xmm,xmm         single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
*MOVDQU  xmm,xmm         single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
*MOVQ    xmm,xmm         single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
MOVQ2DQ  xmm,mm          single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
*MOVUPS  xmm,xmm         single  single  FADD/FMUL/FSTORE 2    0    3/1   FADD-2
CMPPD    xmm,xmm,imm     single  single  FADD       2    2    1/1   FADD-2
CMPPS    xmm,xmm,imm     single  single  FADD       2    2    1/1   FADD-2
CMPSD    xmm,xmm,imm     single  single  FADD       2    2    1/1   FADD-2
CMPSS    xmm,xmm,imm     single  single  FADD       2    2    1/1   FADD-2
MAXPD    xmm,xmm         single  single  FADD       2    2    1/1   FADD-2
MAXPS    xmm,xmm         single  single  FADD       2    2    1/1   FADD-2
MAXSD    xmm,xmm         single  single  FADD       2    2    1/1   FADD-2
MAXSS    xmm,xmm         single  single  FADD       2    2    1/1   FADD-2
MINPD    xmm,xmm         single  single  FADD       2    2    1/1   FADD-2
MINPS    xmm,xmm         single  single  FADD       2    2    1/1   FADD-2
MINSD    xmm,xmm         single  single  FADD       2    2    1/1   FADD-2
MINSS    xmm,xmm         single  single  FADD       2    2    1/1   FADD-2
PFCMPEQ  mm,mm           single  single  FADD       2    2    1/1   FADD-2
PFCMPGE  mm,mm           single  single  FADD       2    2    1/1   FADD-2
PFCMPGT  mm,mm           single  single  FADD       2    2    1/1   FADD-2
PFMAX    mm,mm           single  single  FADD       2    2    1/1   FADD-2
PFMIN    mm,mm           single  single  FADD       2    2    1/1   FADD-2
MOVLHPS  xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVSD   xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVSHDUP xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVSLDUP xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVSS   xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVQ    mm,mm           single  single  FADD/FMUL  2    0    1/99  FADD-2
ANDNPD   xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
ANDNPS   xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
ANDPD    xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
ANDPS    xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
EXTRQ    xmm,xmm/imm,imm single  single  FADD/FMUL  2    0    2/1   FADD-2
MOVHLPS  xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
MOVLHPS  xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVSD   xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVSHDUP xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVSLDUP xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
*MOVSS   xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
ORPD     xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
ORPS     xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
PACKSSDW xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PACKSSWB xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PACKUSWB xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PADDB    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PADDW    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PADDD    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PADDQ    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PADDSB   xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PADDSW   xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PADDUSB  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PADDUSW  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PAND     xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PANDN    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PAVGB    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PAVGW    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PAVGUSB  mm,mm           single  single  FADD/FMUL  2    2    2/1   FADD-2
PCMPEQB  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PCMPEQW  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PCMPEQD  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PCMPGTB  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PCMPGTW  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PCMPGTD  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PMAXSW   xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PMAXUB   xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PMINSW   xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PMINUB   xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
POR      xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSHUFD   xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
PSHUFW   mm,mm           single  single  FADD/FMUL  2    2    2/1   FADD-2
PSHUFHW  xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
PSHUFLW  xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
PSLLW    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSLLD    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSLLQ    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSLLDQ   xmm,xmm         single  single  FADD/FMUL  2    0    2/1   FADD-2
PSRAW    xmm/mm,(xmm/mm)/imm single  single  FADD/FMUL  2    2    2/1   FADD-2
PSRAD    xmm/mm,(xmm/mm)/imm single  single  FADD/FMUL  2    2    2/1   FADD-2
PSRLW    xmm/mm,(xmm/mm)/imm single  single  FADD/FMUL  2    2    2/1   FADD-2
PSRLD    xmm/mm,(xmm/mm)/imm single  single  FADD/FMUL  2    2    2/1   FADD-2
PSRLQ    xmm/mm,(xmm/mm)/imm single  single  FADD/FMUL  2    2    2/1   FADD-2
PSRLDQ   xmm,imm         single  single  FADD/FMUL  2    0    2/1   FADD-2
PSUBB    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSUBW    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSUBD    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSUBQ    xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSUBSB   xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSUBSW   xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSUBUSB  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSUBUSW  xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PSWAPD   mm,mm           single  single  FADD/FMUL  2    2    2/1   FADD-2
PUNPCKHBW xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PUNPCKHWD xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PUNPCKHDQ xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PUNPCKHQDQ xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
PUNPCKLBW xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PUNPCKLWD xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PUNPCKLDQ xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
PUNPCKLQDQ xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
PXOR     xmm/mm,xmm/mm   single  single  FADD/FMUL  2    2    2/1   FADD-2
SHUFPD   xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
SHUFPS   xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
UNPCKHPD xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
UNPCKHPS xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
UNPCKLPD xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
UNPCKLPS xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
XORPD    xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2
XORPS    xmm,xmm         single  single  FADD/FMUL  2    2    2/1   FADD-2


*MOVD    reg,xmm/mm      single  single  FADD/INT   3    0    1/1   FADD-3
MOVMSKPD reg,xmm         single  single  FADD       3    0    1/1   FADD-3
MOVMSKPS reg,xmm         single  single  FADD       3    0    1/1   FADD-3
PMOVMSKB reg,xmm/mm      single  single  FADD       3    0    1/1   FADD-3
COMISD   xmm,xmm         single  single  FADD       3    2    1/1   FADD-3
COMISS   xmm,xmm         single  single  FADD       3    2    1/1   FADD-3
PSADBW   xmm/mm,xmm/mm   single  single  FADD       3    2    1/1   FADD-3
UCOMISD  xmm,xmm         single  single  FADD       3    2    1/1   FADD-3
UCOMISS  xmm,xmm         single  single  FADD       3    2    1/1   FADD-3


ADDPD    xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
ADDPS    xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
ADDSD    xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
ADDSS    xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
ADDSUBPD xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
ADDSUBPS xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
HADDPD   xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
HADDPS   xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
HSUBPD   xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
HSUBPS   xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
PF2ID    mm,mm           single  single  FADD       4    2    1/1   FADD-4
PF2IW    mm,mm           single  single  FADD       4    2    1/1   FADD-4
PFACC    mm,mm           single  single  FADD       4    2    1/1   FADD-4
PFADD    mm,mm           single  single  FADD       4    2    1/1   FADD-4
PFNACC   mm,mm           single  single  FADD       4    2    1/1   FADD-4
PFPNACC  mm,mm           single  single  FADD       4    2    1/1   FADD-4
PFSUB    mm,mm           single  single  FADD       4    2    1/1   FADD-4
PFSUBR   mm,mm           single  single  FADD       4    2    1/1   FADD-4
PI2FD    mm,mm           single  single  FADD       4    2    1/1   FADD-4
PI2FW    mm,mm           single  single  FADD       4    2    1/1   FADD-4
SUBPD    xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
SUBPS    xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
SUBSD    xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
SUBSS    xmm,xmm         single  single  FADD       4    2    1/1   FADD-4
*PINSRW  xmm,reg,imm     single  single  FADD/FMUL  4    0    1/1   FADD-4


*PINSRW  xmm,reg,imm     double  double  FADD/FMUL  9    0    1/1   FADD-9


*MOVAPD  mem,xmm         double  double  FSTORE     2    0    1/1   FSTORE-2
*MOVAPS  mem,xmm         double  double  FSTORE     2    0    1/1   FSTORE-2
*MOVD    mem,xmm/mm      single  single  FSTORE     2    0    1/1   FSTORE-2
*MOVHPD  mem,xmm         single  single  FSTORE     2    0    1/1   FSTORE-2
*MOVHPS  mem,xmm         single  single  FSTORE     2    0    1/1   FSTORE-2
*MOVLPD  mem,xmm         single  single  FSTORE     2    0    1/1   FSTORE-2
*MOVLPS  mem,xmm         single  single  FSTORE     2    0    1/1   FSTORE-2
*MOVQ    mem,xmm/mm      single  single  FSTORE     2    0    1/99  FSTORE-2
*MOVSD   mem,xmm         single  single  FSTORE     2    0    1/1   FSTORE-2
*MOVSS   mem,xmm         single  single  FSTORE     2    0    1/1   FSTORE-2

/*  The instruction latency is not given for these instructions in manual 40546.pdf, pg 261               */
MOVNTDQ  mem,xmm         double  double  FSTORE     99   0    1/99  FSTORE-X
MOVNTPD  mem,xmm         double  double  FSTORE     99   0    1/99  FSTORE-X
MOVNTPS  mem,xmm         double  double  FSTORE     99   0    1/99  FSTORE-X
MOVNTSD  mem,xmm         double  double  FSTORE     99   0    1/99  FSTORE-X
MOVNTSS  mem,xmm         double  double  FSTORE     99   0    1/99  FSTORE-X
MOVNTQ   mem,mm          single  single  FSTORE     99   0    1/99  FSTORE-X


*MOVDQU  mem,xmm         vector  vector  FSTORE     3    0    1/2   FSTORE-3
*MOVUPS  mem,xmm         vector  vector  FSTORE     3    0    1/2   FSTORE-3


*MOVAPD  xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVAPS  xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVD    xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVDDUP xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVDQA  xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVDQU  xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVQ    xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVSD   xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVSHDUP xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVSLDUP xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVSS   xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
*MOVUPS  xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2
LDDQU    xmm,mem         single  single  NONE       2    0    2/1   FLOAD-2


*MOVHPD  xmm,mem         single  single  FADD/FMUL  4    0    2/1   FLOAD-4
*MOVHPS  xmm,mem         single  single  FADD/FMUL  4    0    2/1   FLOAD-4
*MOVLPD  xmm,mem         single  single  FADD/FMUL  4    0    2/1   FLOAD-4
*MOVLPS  xmm,mem         single  single  FADD/FMUL  4    0    2/1   FLOAD-4
/*  No throughput was given for these instructions in the 40546.pdf manual, pg 260                       */
*MOVD    mm,mem          single  single  FADD/FMUL/FSTORE 4    0    1/99  FLOAD-4
*MOVQ    mm,mem          single  single  FADD/FMUL/FSTORE 4    0    1/99  FLOAD-4


/*  No throughput was given in th e40546.pdf manual, pg. 260, for this instruction                       */
*MOVD    xmm/mm,reg      double  double  NONE       6    0    1/99  NONE-6


CVTPS2PD xmm,xmm         single  single  FSTORE     2    2    1/1   REGWRITE-2


CVTDQ2PD xmm,xmm         single  single  FSTORE     4    2    1/1   REGWRITE-4
CVTDQ2PS xmm,xmm         single  single  FSTORE     4    2    1/1   REGWRITE-4
CVTPI2PD xmm,mm          single  single  FSTORE     4    2    1/1   REGWRITE-4
CVTPS2DQ xmm,xmm         single  single  FSTORE     4    2    1/1   REGWRITE-4
CVTTPS2DQ xmm,xmm         single  single  FSTORE     4    2    1/1   REGWRITE-4
CVTPS2PI mm,xmm          single  single  FSTORE     4    2    1/1   REGWRITE-4
CVTTPS2PI mm,xmm          single  single  FSTORE     4    2    1/1   REGWRITE-4


PEXTRW   reg,xmm/mm,imm  double  double  FADD&FSTORE 6    0    1/1   REGWRITE-6


CVTPD2DQ xmm,xmm         double  double  (FADD/FMUL)&FSTORE 7    2    1/1   REGWRITE-7
CVTTPD2DQ xmm,xmm         double  double  (FADD/FMUL)&FSTORE 7    2    1/1   REGWRITE-7
CVTPD2PI mm,xmm          double  double  (FADD/FMUL)&FSTORE 7    2    1/1   REGWRITE-7
CVTTPD2PI mm,xmm          double  double  (FADD/FMUL)&FSTORE 7    2    1/1   REGWRITE-7
CVTPD2PS xmm,xmm         double  double  (FADD/FMUL)&FSTORE 7    2    1/1   REGWRITE-7
CVTPI2PS xmm,mm          double  double  (FADD/FMUL)&FSTORE 7    2    1/1   REGWRITE-7
*CVTSS2SD xmm,xmm         vector  vector  (FADD/FMUL)&FSTORE 7    0    1/99  REGWRITE-7
*CVTSS2SD xmm,mem         double  double  (FADD/FMUL)&FSTORE 7    0    1/99  REGWRITE-7


/*  This is actually not quite correct.  There's an 8-cycle that uses the vector path, no mem operand;         */
/* There's a 9-cycle that uses the double path and has a memory operand.  Probably rarely occurs.              */
CVTSD2SS xmm,xmm         double  double  (FADD/FMUL)&FSTORE 8    1    1/1   REGWRITE-8
CVTSD2SI reg,xmm         double  double  FADD&FSTORE 8    2    1/1   REGWRITE-8
CVTTSD2SI reg,xmm         double  double  FADD&FSTORE 8    2    1/1   REGWRITE-8
CVTSS2SI reg,xmm         double  double  FADD&FSTORE 8    2    1/1   REGWRITE-8
CVTTSS2SI reg,xmm         double  double  FADD&FSTORE 8    2    1/1   REGWRITE-8

*CVTSI2SD xmm,mem         double  double  (FADD/FMUL)&FSTORE 9    0    1/1   REGWRITE-9
*CVTSI2SS xmm,mem         double  double  (FADD/FMUL)&FSTORE 9    0    1/1   REGWRITE-9


*CVTSI2SD xmm,reg         vector  vector  (FADD/FMUL)&FSTORE 14   0    1/99  REGWRITE-14
*CVTSI2SS xmm,reg         vector  vector  (FADD/FMUL)&FSTORE 14   0    1/99  REGWRITE-14


PFRCP    mm,mm           single  single  FMUL       3    2    1/1   FMUL-3
PFRSQRT  mm,mm           single  single  FMUL       3    2    1/1   FMUL-3
PMADDWD  xmm/mm,xmm/mm   single  single  FMUL       3    2    1/1   FMUL-3
PMULHUW  xmm,xmm         single  single  FMUL       3    2    1/1   FMUL-3
PMULHW   xmm,xmm         single  single  FMUL       3    2    1/1   FMUL-3
PMULLW   xmm,xmm         single  single  FMUL       3    2    1/1   FMUL-3
PMULUDQ  xmm,xmm         single  single  FMUL       3    2    1/1   FMUL-3
PMULHRW  mm,mm           single  single  FMUL       3    2    1/1   FMUL-3
PMULHUW  mm,mm           single  single  FMUL       3    2    1/1   FMUL-3
PMULHW   mm,mm           single  single  FMUL       3    2    1/1   FMUL-3
PMULLW   mm,mm           single  single  FMUL       3    2    1/1   FMUL-3
PMULUDQ  mm,mm           single  single  FMUL       3    2    1/1   FMUL-3
RCPPS    xmm,xmm         single  single  FMUL       3    2    1/1   FMUL-3
RCPSS    xmm,xmm         single  single  FMUL       3    2    1/1   FMUL-3
RSQRTPS  xmm,xmm         single  single  FMUL       3    2    1/1   FMUL-3
RSQRTSS  xmm,xmm         single  single  FMUL       3    2    1/1   FMUL-3


MULPD    xmm,xmm         single  single  FMUL       4    2    1/1   FMUL-4
MULPS    xmm,xmm         single  single  FMUL       4    2    1/1   FMUL-4
MULSD    xmm,xmm         single  single  FMUL       4    2    1/1   FMUL-4
MULSS    xmm,xmm         single  single  FMUL       4    2    1/1   FMUL-4
PFMUL    mm,mm           single  single  FMUL       4    2    1/1   FMUL-4
PFRCPIT1 mm,mm           single  single  FMUL       4    2    1/1   FMUL-4
PFRCPIT2 mm,mm           single  single  FMUL       4    2    1/1   FMUL-4
PFRSQIT1 mm,mm           single  single  FMUL       4    2    1/1   FMUL-4


DIVSS    xmm,xmm         single  single  FMUL       16   2    1/13  FDIV-16


DIVPS    xmm,xmm         single  single  FMUL       18   2    1/15  FDIV-18


DIVPD    xmm,xmm         single  single  FMUL       20   2    1/17  FDIV-20
DIVSD    xmm,xmm         single  single  FMUL       20   2    1/17  FDIV-20


SQRTSS   xmm,xmm         single  single  FMUL       19   2    1/18  FSQRT-19


SQRTPS   xmm,xmm         single  single  FMUL       21   2    1/18  FSQRT-21


SQRTPD   xmm,xmm         single  single  FMUL       27   2    1/24  FSQRT-27
SQRTSD   xmm,xmm         single  single  FMUL       27   2    1/24  FSQRT-27


FRSTOR   none            vector  vector  NONE       133  0    1/99  SPECIAL
FSAVE    none            vector  vector  NONE       162  0    1/99  SPECIAL
FXRSTOR  none            vector  vector  NONE       89   0    1/99  SPECIAL
FXSAVE   none            vector  vector  NONE       63   0    1/99  SPECIAL
*INSERTQ xxm,xxm         vector  vector  MULTIPLE   5    0    1/99  SPECIAL
*INSERTQ xxm,xxm,imm,imm vector  vector  MULTIPLE   5    0    1/99  SPECIAL
LDMXCSR  mem             vector  vector  NONE       12   0    1/99  SPECIAL
MASKMOVDQU xmm,xmm         vector  vector  NONE       99   0    1/99  SPECIAL
MASMOVQ  mm,mm           vector  vector  NONE       99   0    1/99  SPECIAL
STMXCSR  none            vectore vectore NONE       12   0    1/99  SPECIAL

/* General Purpose Instructions */

/*  Instruction;Operands;Operation;Decode Unit;Execution Unit;Base Latency;+Memory Latency;Throughput;Category       */
/*  By default, if an instruction has no character to its left, this means that there is always a 2-cycle difference */
/*  between that instruction have only xmm register operands and that instruction having a memory operand.          */
/*  Any instruction that has a memory operand as its second operand is a LOAD.                                       */
/*  Instructions with an * in front of them means that the operands must be inspected before you can tell which      */
/*  execution unit it will use, and therefore, its latency.							     */

/*  I'm actually not sure of the throughput of any of these instructions.  The instruction table doesn't have a      */
/*  throughput column, so I'm assuming that the throughput is 1/1, but this may need to be verified with             */
/*  microbenchmarks.       											     */
		

*ADC     reg,reg/imm     single  single  ALU        1    3    1/1   ALU-1 
*ADD     reg,reg/imm     single  single  ALU        1    3    1/1   ALU-1 
*AND     reg,reg/imm     single  single  ALU        1    3    1/1   ALU-1 
BSWAP    reg             single  single  ALU        1    0    1/1   ALU-1 
*BT      reg,reg/imm     single  single  ALU        1    0    1/1   ALU-1 
CMP      reg,reg/imm     single  single  ALU        1    3    1/1   ALU-1 
DEC      reg             single  single  ALU        1    3    1/1   ALU-1 
INC      reg             single  single  ALU        1    3    1/1   ALU-1 
NEG      reg             single  single  ALU        1    3    1/1   ALU-1 
NOT      reg             single  single  ALU        1    3    1/1   ALU-1 
*OR      reg,reg/imm     single  single  ALU        1    3    1/1   ALU-1 
*RCL     reg,1           single  single  ALU        1    0    1/1   ALU-1 
*RCR     reg,1           single  single  ALU        1    0    1/1   ALU-1 
ROL      reg,1/CL/imm    single  single  ALU        1    3    1/1   ALU-1 
ROR      reg,1/CL/imm    single  single  ALU        1    3    1/1   ALU-1 
*SAL     reg,1/CL/imm    single  single  ALU        1    0    1/1   ALU-1 
*SAR     reg,1/CL/imm    single  single  ALU        1    0    1/1   ALU-1 
*SBB     reg,reg/imm     single  single  ALU        1    3    1/1   ALU-1 
*SHL     reg,1/CL/imm    single  single  ALU        1    0    1/1   ALU-1 
*SHR     reg,1/CL/imm    single  single  ALU        1    0    1/1   ALU-1 
*SUB     reg,reg/imm     single  single  ALU        1    3    1/1   ALU-1 
*TEST    reg,reg/imm     single  single  ALU        1    0    1/1   ALU-1 
*XOR     reg,reg/imm     single  single  ALU        1    3    1/1   ALU-1 


CBW      none            single  single  NONE       1    0    1/1   NONE-1
CWDE     none            single  single  NONE       1    0    1/1   NONE-1
CDQE     none            single  single  NONE       1    0    1/1   NONE-1
CWD      none            single  single  NONE       1    0    1/1   NONE-1
CDQ      none            single  single  NONE       1    0    1/1   NONE-1
CQO      none            single  single  NONE       1    0    1/1   NONE-1
CLC      none            single  single  NONE       1    0    1/1   NONE-1
CLD      none            single  single  NONE       1    0    1/1   NONE-1
CMC      none            single  single  NONE       1    0    1/1   NONE-1
/*  The cc in CMOVcc is a condition code.  These are in the instruction manual,*/
/*  24594.pdf, page 91.                             
CMOVCC   reg,reg         single  single  NONE       1    3    1/1   NONE-1
/*  The cc in J cc is a condition code.  These are in the instruction manual,  */
/*  24594.pdf, page 130.                                                       */
JCC      disp            single  single  NONE       1    0    1/1   NONE-1

JMP      disp/reg        single  single  NONE       1    0    1/1   NONE-1

*MOV     reg,reg         single  single  NONE       1    0    1/1   NONE-1
MOVSX    reg,reg         single  single  NONE       1    3    1/1   NONE-1
MOVSXD   reg,reg         single  single  NONE       1    3    1/1   NONE-1
MOVZX    reg,reg         single  single  NONE       1    3    1/1   NONE-1
SAHF     none            single  single  NONE       1    0    1/1   NONE-1
/*  The cc in SET is a condition code.  These are in the instruction manual, 24594.pdf  */
/*  page 225.                                                                           */
SETCC    reg             single  single  NONE       1    2    1/1   NONE-1
STC      none            single  single  NONE       1    0    1/1   NONE-1


*BTC     reg,reg/imm     double  double  ALU        2    0    1/1   ALU-2 
*BTR     reg,reg/imm     double  double  ALU        2    0    1/1   ALU-2 
*BTS     reg,reg/imm     double  double  ALU        2    0    1/1   ALU-2 
LZCNT    reg,reg         single  single  ALU2       2    3    1/1   ALU-2 
POPCNT   reg,reg         single  single  ALU2       2    3    1/1   ALU-2 
*XADD    reg,reg         vectir  vectir  ALU        2    0    1/1   ALU-2 


JCXZ     disp            double  double  NONE       2    0    1/1   NONE-2
JECXZ    disp            double  double  NONE       2    0    1/1   NONE-2
JRCXZ    disp            double  double  NONE       2    0    1/1   NONE-2
STD      none            double  double  NONE       2    0    1/1   NONE-2
*XCHG    reg8,reg8       vector  vector  NONE       2    0    1/1   NONE-2


/*  According to the documentation on page 225 of the 40546.pdf manual, multiplication    */
/*  uses only the ALU0 execution unit.  Division doesn't need to use ALU0.                */
*IMUL    reg8            single  single  ALU0       3    0    1/1   ALU-3 
*MUL     reg8            single  single  ALU0       3    0    1/1   ALU-3 
*IMUL    reg16,reg16     single  single  ALU0       3    0    1/1   ALU-3 
*IMUL    reg32           double  double  ALU0       3    0    1/1   ALU-3 
*MUL     reg32           double  double  ALU0       3    0    1/1   ALU-3 
*IMUL    reg32,reg32     single  single  ALU0       3    0    1/1   ALU-3 
*IMUL    reg32,imm32     single  single  ALU0       3    3    1/1   ALU-3 
*IMUL    reg32,reg32,imm single  single  ALU0       3    0    1/1   ALU-3 
*CMPXCHG reg,reg         vector  vector  ALU        3    0    1/1   ALU-3 


*PUSH    mem             double  double  AGU        3    0    1/1   AGU-3 
*POP     mem             vector  vector  AGU        3    0    1/1   AGU-3 


*CALL    disp/reg        double  double  NONE       3    0    1/1   NONE-3
LAHF     none            vector  vector  NONE       3    0    1/1   NONE-3
*MOV     reg32/64,FS     single  single  NONE       3    0    1/1   NONE-3
*POP     reg32/64        single  single  NONE       3    0    1/1   NONE-3
*PUSH    reg/imm         single  single  NONE       3    0    1/1   NONE-3
*PUSH    CS/DS/ES/FS/GS/SS double  double  NONE       3    0    1/1   NONE-3


*BT      mem,imm         single  single  ALU        4    0    1/1   ALU-4 
BSF      reg,reg         vector  vector  ALU        4    3    1/1   ALU-4 
BSR      reg,reg         vector  vector  ALU        4    3    1/1   ALU-4 
*RCL     mem,1           single  single  ALU        4    0    1/1   ALU-4 
*RCR     reg,CL          vector  vector  ALU        4    0    1/1   ALU-4 
*RCR     mem,1           single  single  ALU        4    0    1/1   ALU-4 
*SAL     mem,1/CL/imm    single  single  ALU        4    0    1/1   ALU-4 
*SAR     mem,1/CL/imm    single  single  ALU        4    0    1/1   ALU-4 
*SHL     mem,1/CL/imm    single  single  ALU        4    0    1/1   ALU-4 
*SHLD    reg,reg,CL/imm  vector  vector  ALU        4    0    1/1   ALU-4 
*SHR     mem,1/CL/imm    single  single  ALU        4    0    1/1   ALU-4 
*SHRD    reg,reg,CL/imm  vector  vector  ALU        4    0    1/1   ALU-4 
*TEST    mem,reg/imm     single  single  ALU        4    0    1/1   ALU-4 


*JMP     mem             single  single  AGU        4    0    1/1   AGU-4 
*CALL    mem             vector  vector  AGU        4    0    1/1   AGU-4 


*RET     none            single  single  NONE       4    0    1/1   NONE-4
*RET     imm16           double  double  NONE       4    0    1/1   NONE-4


*MOV     reg32,SS/DS     single  single  NONE       4    0    1/1   NONE-4
*POP     reg16           double  double  NONE       4    0    1/1   NONE-4
SCAS     none            vector  vector  NONE       4    0    1/1   NONE-4
SCASB    none            vector  vector  NONE       4    0    1/1   NONE-4
SCASW    none            vector  vector  NONE       4    0    1/1   NONE-4
SCASD    none            vector  vector  NONE       4    0    1/1   NONE-4
SCASQ    none            vector  vector  NONE       4    0    1/1   NONE-4


*IMUL    reg16           vector  vector  ALU0       4    0    1/1   ALU-4 
*MUL     reg16           vector  vector  ALU0       4    0    1/1   ALU-4 
*IMUL    reg16,imm16     vector  vector  ALU0       4    2    1/1   ALU-4 
*IMUL    reg16,reg16,imm vector  vector  ALU0       4    0    1/1   ALU-4 
*IMUL    reg64,imm64     single  single  ALU0       4    3    1/1   ALU-4 
*IMUL    reg64,reg64     single  single  ALU0       4    0    1/1   ALU-4 
*IMUL    reg64,reg64,imm single  single  ALU0       4    0    1/1   ALU-4 


*BTC     mem,imm         vector  vector  ALU        5    0    1/1   ALU-5 
*BTR     mem,imm         vector  vector  ALU        5    0    1/1   ALU-5 
*BTS     mem,imm         vector  vector  ALU        5    0    1/1   ALU-5 
*CMPXCHG mem16/32/64,reg16/32/64 vector  vector  ALU        5    0    1/1   ALU-5 
*RCR     reg,imm         vector  vector  ALU        5    0    1/1   ALU-5 
*IMUL    reg64           double  double  ALU0       5    0    1/1   ALU-5 
*MUL     reg64           double  double  ALU0       5    0    1/1   ALU-5 


XLAT     none            vector  vector  NONE       5    0    1/1   NONE-5
XLATB    none            vector  vector  NONE       5    0    1/1   NONE-5


BOUND    reg,mem         vector  vector  ALU        6    0    1/1   ALU-6 
CMPS     none            vector  vector  ALU        6    0    1/1   ALU-6 
CMPSB    none            vector  vector  ALU        6    0    1/1   ALU-6 
CMPSW    none            vector  vector  ALU        6    0    1/1   ALU-6 
CMPSD    none            vector  vector  ALU        6    0    1/1   ALU-6 
CMPSQ    none            vector  vector  ALU        6    0    1/1   ALU-6 
*CMPXCHG mem8,reg8       vector  vector  ALU        6    0    1/1   ALU-6 
*RCL     reg,CL          vector  vector  ALU        6    0    1/1   ALU-6 
*RCR     mem,imm/CL      vector  vector  ALU        6    0    1/1   ALU-6 
*IMUL    mem8            single  single  ALU0       6    0    1/1   ALU-6 
*MUL     mem8            single  single  ALU0       6    0    1/1   ALU-6 
*IMUL    mem32           double  double  ALU0       6    0    1/1   ALU-6 
*MUL     mem32           double  double  ALU0       6    0    1/1   ALU-6 
*SHLD    mem,reg,CL/imm  vector  vector  ALU        6    0    1/1   ALU-6 
*SHRD    mem,reg,CL/imm  vector  vector  ALU        6    0    1/1   ALU-6 


POPA     none            vector  vector  NONE       6    0    1/1   NONE-6
POPAD    none            vector  vector  NONE       6    0    1/1   NONE-6
PUSHA    none            vector  vector  NONE       6    0    1/1   NONE-6
PUSHAD   none            vector  vector  NONE       6    0    1/1   NONE-6


*BT      mem,reg         vector  vector  ALU        7    0    1/1   ALU-7 
*LOOPcc  pm64            vector  vector  ALU        7    0    1/1   ALU-7 
*RCL     reg,imm         vector  vector  ALU        7    0    1/1   ALU-7 
*RCL     mem,imm/CL      vector  vector  ALU        7    0    1/1   ALU-7 
*IMUL    reg16,mem16,imm vector  vector  ALU0       7    0    1/1   ALU-7 
*IMUL    reg32,mem32,imm vector  vector  ALU0       7    0    1/1   ALU-7 
*IMUL    mem16           vector  vector  ALU0       7    0    1/1   ALU-7 
*MUL     mem16           vector  vector  ALU0       7    0    1/1   ALU-7 


*BTC     mem,reg         vector  vector  ALU        8    0    1/1   ALU-8 
*BTR     mem,reg         vector  vector  ALU        8    0    1/1   ALU-8 
*BTS     mem,reg         vector  vector  ALU        8    0    1/1   ALU-8 
*LOOPcc  pm32            vector  vector  ALU        8    0    1/1   ALU-8 
*IMUL    reg64,mem64,imm vector  vector  ALU0       8    0    1/1   ALU-8 
*IMUL    mem64           double  double  ALU0       8    0    1/1   ALU-8 
*MUL     mem64           double  double  ALU0       8    0    1/1   ALU-8 


*MOV     DS,reg32        vector  vector  NONE       8    0    1/1   NONE-8
*MOV     FS,reg32/64     vector  vector  NONE       8    0    1/1   NONE-8


CMPXCHG8B mem64           vector  vector  ALU        10   0    1/1   ALU-10


*MOV     SS,reg32        vector  vector  NONE       10   0    1/1   NONE-10
*POP     DS/ES/FS/GS     vector  vector  NONE       10   0    1/1   NONE-10


CMPXCHG16B mem128          vector  vector  ALU        11   0    1/1   ALU-11


POPF     none            vector  vector  NONE       15   0    1/1   NONE-15
POPFD    none            vector  vector  NONE       15   0    1/1   NONE-15
POPFQ    none            vector  vector  NONE       15   0    1/1   NONE-15


*POP     SS              vector  vector  NONE       26   0    1/1   NONE-26
	

/*  For division, we have a problem.  The latency is dependent on the size of the operand. */
/*  We probably need to collect stats on this from the application.  With any luck, these  */
/*  don't occur very often.  The latency ranges between 17 and 72 cycles.  See page 142    */
/*  of the Software Optimization Manual (40546.pdf) for the details.                       */  
DIV      reg,mem         vector  vector  ALU        99   0    1/99  ALU   
IDIV     reg,mem         vector  vector  ALU        99   0    1/99  ALU   


/*  For the PUSHF, PUSHFD, and PUSHFQ instructions, there is no latency listed.            */
PUSHF    none            vector  vector  NONE       99   0    1/99  NONE  
PUSHFD   none            vector  vector  NONE       99   0    1/99  NONE  
PUSHFQ   none            vector  vector  NONE       99   0    1/99  NONE  


/*  Mem addresses with a base and an index only have latency 1; mem addresses that have a  */
/*  base, index, and scale have a latnecy of 2.                                            */
LEA      reg32/64,mem    single  single  AGU        1    0    1/1   LOAD-1


LEA      reg16,mem       vector  vector  AGU        3    0    1/1   LOAD-3
*MOV     reg,mem32/64    single  single  AGU        3    0    1/1   LOAD-3



LODSD    none            vector  vector  NONE       4    0    1/1   LOAD-4
*MOV     reg,mem8/16     single  single  AGU        4    0    1/1   LOAD-4



LODS     none            vector  vector  NONE       5    0    1/1   LOAD-5
LODSW    none            vector  vector  NONE       5    0    1/1   LOAD-5

/*  I'm not sure about the latency on the LOADSQ instruction.  This is in the instruction   */
/*  description (24594.pdf,pg 149), but is not in 40546.pdf (page 244).  I'm guessing a     */
/*  latency of 5, but I think this will need to be micro-benchmarked.                       */
LODSQ    none            vector  vector  NONE       5    0    1/1   LOAD-5


*MOV     DS,mem32        vector  vector  AGU        10   0    1/1   LOAD-10
*MOV     FS,mem16        vector  vector  AGU        10   0    1/1   LOAD-10


*XCHG    reg32/64,mem32/64 double  double  AGU        15   0    1/1   LOAD-15


*XCHG    reg8,mem8       vector  vector  AGU        16   0    1/1   LOAD-16
*XCHG    reg16,mem16     double  double  AGU        16   0    1/1   LOAD-16


*MOV     SS,mem32        vector  vector  AGU        26   0    1/1   LOAD-26


*MOV     mem,reg/imm     single  single  AGU        3    0    1/1   STORE-3


*ADC     mem,reg/imm     single  single  ALU        4    0    1/1   STORE-4
*ADD     mem,reg/imm     single  single  ALU        4    0    1/1   STORE-4
*AND     mem,reg/imm     single  single  ALU        4    0    1/1   STORE-4
*OR      mem,reg/imm     single  single  ALU        4    0    1/1   STORE-4
*MOV     mem16,FS        double  double  AGU        4    0    1/1   STORE-4
*MOV     mem32,SS/DS     double  double  AGU        4    0    1/1   STORE-4
*SBB     mem,reg/imm     single  single  ALU        4    0    1/1   STORE-4
STOS     none            vector  vector  NONE       4    0    1/1   STORE-4
STOSB    none            vector  vector  NONE       4    0    1/1   STORE-4
STOSW    none            vector  vector  NONE       4    0    1/1   STORE-4
STOSD    none            vector  vector  NONE       4    0    1/1   STORE-4
STOSQ    none            vector  vector  NONE       4    0    1/1   STORE-4
*SUB     mem,reg/imm     single  single  ALU        4    0    1/1   STORE-4
*XOR     mem,reg/imm     single  single  ALU        4    0    1/1   STORE-4


MOVS     none            vector  vector  NONE       5    0    1/1   STORE-5
MOVSB    none            vector  vector  NONE       5    0    1/1   STORE-5
MOVSW    none            vector  vector  NONE       5    0    1/1   STORE-5
MOVSD    none            vector  vector  NONE       5    0    1/1   STORE-5
MOVSQ    none            vector  vector  NONE       5    0    1/1   STORE-5
*XADD    mem,reg         vector  vector  ALU        5    0    1/1   STORE-5


*XCHG    mem32/64,reg32/64 double  double  AGU        15   0    1/1   STORE-15


*XCHG    mem8,reg8       vector  vector  AGU        16   0    1/1   STORE-16
*XCHG    mem16,reg16     double  double  AGU        16   0    1/1   STORE-16


/*  The MOVNTI instruction's latency may be variable.  It uses the processor's    */
/*  write-combining resources.  Should microbenchmark to determine latency.       */
MOVNTI   mem,reg         single  single  AGU        99   0    1/1   STORE-X

	
*CPUID   fn0x0           vector  vector  ALU        41   0    1/1   SPECIAL
*CPUID   fn0x1           vector  vector  ALU        127  0    1/1   SPECIAL
*CPUID   fn0x2           vector  vector  ALU        37   0    1/1   SPECIAL
DAA      none            vector  vector  ALU        7    0    1/1   SPECIAL
DAS      none            vector  vector  ALU        7    0    1/1   SPECIAL
*ENTER   imm32,0         vector  vector  ALU        14   0    1/1   SPECIAL
*ENTER   imm32,1         vector  vector  ALU        17   0    1/1   SPECIAL
*ENTER   imm32,2         vector  vector  ALU        19   0    1/1   SPECIAL
LEAVE    none            double  double  ALU        3    0    1/1   SPECIAL
NOP      none            none    none    none       1    0    1/1   SPECIAL
RDTSC    none            none    none    none       1    0    1/1   SPECIAL
SYSCALL  none            none    none    none       1    0    1/1   SPECIAL
